name: Validate Documentation

on:
  push:
    branches-ignore:
      - main
      - gh-pages
  pull_request:
    branches: 
      - '*'
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  issues: write
  pull-requests: write

# Simple concurrency - one run per branch or PR
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          
      - name: Setup documentation files
        run: |
          mkdir -p docs/stylesheets
          # Copy files if needed
          if [ ! -f docs/index.md ]; then
            cp README.md docs/index.md
          fi
          for file in security-services.md devops-services.md cloud-migration.md digital-transformation.md; do
            if [ ! -f docs/$file ] && [ -f "$file" ]; then
              cp $file docs/
            fi
          done
          # Fix file content
          for file in docs/*.md; do
            if [ -f "$file" ] && [ "$(head -n 1 $file | grep 'filepath:')" ]; then
              sed -i '1d' "$file"
            fi
            if [ -f "$file" ]; then
              sed -i 's|\[Back to Service Portfolio\](README.md)|[Back to Home](index.md)|g' "$file"
            fi
          done
          if [ -f "docs/README.md" ]; then
            rm -f docs/README.md
          fi
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs-material
          
      - name: Run validation
        run: |
          echo "Running documentation validation..."
          mkdocs build --strict
          echo "✅ Documentation validation passed"
          
      # Add PR comment
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `## Documentation Validation Results
            
            ✅ Documentation validation completed successfully!
            
            **This PR is ready for review and can be merged.**
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      
      # Send notification
      - name: Send notification
        env:
          ENCODED_WEBHOOK_URL: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
        run: |
          if [ -z "$ENCODED_WEBHOOK_URL" ]; then
            echo "❌ GOOGLE_CHAT_WEBHOOK_URL secret is not set. Skipping notification."
            exit 0
          fi

          WEBHOOK_URL=$(echo "$ENCODED_WEBHOOK_URL" | base64 -d)

          if [ -z "$WEBHOOK_URL" ]; then
            echo "❌ Failed to decode the webhook URL."
            exit 0
          fi
          
          # Create thread key based on PR or branch
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            THREAD_KEY="${{ github.repository }}-pr-${{ github.event.pull_request.number }}"
            MESSAGE="✅ <b>Documentation Validation Passed</b><br>PR #${{ github.event.pull_request.number }} is ready for review and can be merged."
            PR_LINK="https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}"
            
            JSON_PAYLOAD="{
              \"text\": \"$MESSAGE\",
              \"thread\": {
                \"threadKey\": \"$THREAD_KEY\"
              },
              \"cards\": [{
                \"sections\": [{
                  \"widgets\": [{
                    \"buttons\": [{
                      \"textButton\": {
                        \"text\": \"Review PR\",
                        \"onClick\": {
                          \"openLink\": {
                            \"url\": \"$PR_LINK\"
                          }
                        }
                      }
                    },
                    {
                      \"textButton\": {
                        \"text\": \"View Workflow\",
                        \"onClick\": {
                          \"openLink\": {
                            \"url\": \"https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\"
                          }
                        }
                      }
                    }]
                  }]
                }]
              }]
            }"
          else
            THREAD_KEY="${{ github.repository }}-branch-${GITHUB_REF##*/}"
            MESSAGE="✅ <b>Documentation Validation Passed</b><br>Branch '${GITHUB_REF##*/}' validation completed successfully."
            
            JSON_PAYLOAD="{
              \"text\": \"$MESSAGE\",
              \"thread\": {
                \"threadKey\": \"$THREAD_KEY\"
              },
              \"cards\": [{
                \"sections\": [{
                  \"widgets\": [{
                    \"buttons\": [{
                      \"textButton\": {
                        \"text\": \"View Workflow\",
                        \"onClick\": {
                          \"openLink\": {
                            \"url\": \"https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\"
                          }
                        }
                      }
                    }]
                  }]
                }]
              }]
            }"
          fi
          
          curl -s -X POST -H "Content-Type: application/json" \
            -d "$JSON_PAYLOAD" \
            "$WEBHOOK_URL"