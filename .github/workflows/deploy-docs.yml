name: Deploy Documentation

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Verify secrets
        run: |
          if [ -n "${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}" ]; then
            echo "✅ Google Chat webhook URL is set"
            # Extract domain to verify it's a Google domain without exposing the full URL
            WEBHOOK_DOMAIN=$(echo "${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}" | sed -E 's/https?:\/\/([^/]+).*/\1/')
            echo "Webhook domain: $WEBHOOK_DOMAIN"
            # Check if it's a valid Google Chat webhook domain
            if [[ "$WEBHOOK_DOMAIN" == *"googleapis.com" ]]; then
              echo "✅ Webhook domain appears to be valid"
            else
              echo "⚠️ Warning: Webhook domain does not appear to be a Google API domain"
            fi
          else
            echo "❌ Google Chat webhook URL is not set"
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mkdocs-material

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Build documentation
        run: mkdocs build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3

      - name: Send Google Chat notification on success
        if: success()
        run: |
          # Test curl with minimal content to validate webhook
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X POST \
          -H "Content-Type: application/json" \
          -d "{\"text\": \"✅ Testing webhook connection\"}" \
          ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }})
          
          if [ "$RESPONSE" = "200" ]; then
            echo "✅ Webhook test successful"
            # Now send the actual notification
            curl -X POST \
            -H "Content-Type: application/json" \
            -d "{\"text\": \"✅ **Documentation Deployment Successful**\\n\\nThe ZSoftly documentation has been successfully deployed to GitHub Pages.\\n\\n**Repository**: ${{ github.repository }}\\n**URL**: ${{ steps.deployment.outputs.page_url }}\\n**Action**: [View workflow run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\"}" \
            ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
          else
            echo "❌ Webhook test failed with status $RESPONSE"
          fi

      - name: Verify deployment
        run: |
          TIMEOUT=300
          INTERVAL=10
          URL="${{ steps.deployment.outputs.page_url }}"
          echo "Verifying deployment at $URL"
          START_TIME=$(date +%s)
          while :; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
            if [ "$STATUS" = "200" ]; then
              echo "✅ Deployment verified successfully (HTTP $STATUS)"
              exit 0
            fi
            CURRENT_TIME=$(date +%s)
            ELAPSED_TIME=$((CURRENT_TIME - START_TIME))
            if [ $ELAPSED_TIME -gt $TIMEOUT ]; then
              echo "❌ Deployment verification timed out after $TIMEOUT seconds (HTTP $STATUS)"
              exit 1
            fi
            echo "Waiting for deployment to become available (HTTP $STATUS)..."
            sleep $INTERVAL
          done